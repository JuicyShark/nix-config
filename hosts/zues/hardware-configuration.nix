# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/6dba17bd-db95-4818-ae40-12b0378bfe2e";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/6532-9B98";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];



  networking = {
    useDHCP = lib.mkDefault false;
    nameservers = [ "8.8.8.8" ];
    firewall.enable = true;
   # defaultGateway.address = "192.168.54.99";
  #  defaultGateway.interface = "enp1s0";

    nat = {
      enable = true;
      externalInterface = "enp1s0";
      internalInterfaces = [ "enp2s0" "enp3s0" "enp4s0" ];
    };


 #  wlanInterfaces = {
 #      wlan = {
 #       device = "enp1s0";
 #      };
#  };
    interfaces = {
      enp1s0 = {


        ipv4 = {
          addresses = [{
            address = "192.168.54.98";
            prefixLength = 24;
         }];
         routes = [{
            address = "0.0.0.0";
            prefixLength = 0;
            via = "192.168.54.99";
          }];
        };
      };
      enp2s0 = {
        ipv4 = {
          addresses = [
            {
              address = "192.168.53.98";
              prefixLength = 24;
            }
          ];
          routes = [{
            address = "0.0.0.0";
            prefixLength = 0;
            via = "192.168.54.99";
          }];
        };
      };
      /*
      enp3s0 = {
        useDHCP = lib.mkDefault false;
        name = "lan1";
        ipv4 = {
          addresses = [
            {
              address = "192.168.55.91";
              prefixLength = 24;
            }
          ];
        };
      };
      enp4s0 = {
        useDHCP = lib.mkDefault false;
        name = "lan2";
        ipv4 = {
          addresses = [
            {
              address = "192.168.56.92";
              prefixLength = 24;
            }
          ];
        };
      }; */
    };
     /* nftables = {
          enable = true;
          ruleset = ''
            table ip filter {
              chain input {
                type filter hook input priority 0; policy drop;

                iifname { "enp2s0" } accept comment "Allow local network to access the router"
                iifname { "enp3s0" } accept comment "Allow local network to access the router"
                iifname { "enp4s0" } accept comment "Allow local network to access the router"
                iifname "enp1s0" ct state { established, related } accept comment "Allow established traffic"
                iifname "enp1s0" icmp type { echo-request, destination-unreachable, time-exceeded } counter accept comment "Allow select ICMP"
                iifname "enp1s0" counter drop comment "Drop all other unsolicited traffic from wan"
              }
              chain forward {
                type filter hook forward priority 0; policy drop;
                iifname { "enp2s0" } oifname { "enp1s0" } accept comment "Allow trusted LAN to WAN"
                iifname { "enp2s0" } oifname { "enp2s0" } ct state established, related accept comment "Allow established back to LANs"
               }
            }
          '';


    };*/
  };
  services.kea = {
    dhcp4.enable = true;
    dhcp4.settings = {
      interfaces-config = {
        interfaces = [
          "enp2s0"
        ];
      };


    };
  };
  # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
